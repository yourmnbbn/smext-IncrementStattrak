// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: is_message.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "is_message.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* CMsgIncrementKillCountAttribute_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgIncrementKillCountAttribute_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ECsgoGCMsg_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_is_5fmessage_2eproto() {
  protobuf_AddDesc_is_5fmessage_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "is_message.proto");
  GOOGLE_CHECK(file != NULL);
  CMsgIncrementKillCountAttribute_descriptor_ = file->message_type(0);
  static const int CMsgIncrementKillCountAttribute_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgIncrementKillCountAttribute, killer_account_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgIncrementKillCountAttribute, victim_account_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgIncrementKillCountAttribute, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgIncrementKillCountAttribute, event_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgIncrementKillCountAttribute, amount_),
  };
  CMsgIncrementKillCountAttribute_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgIncrementKillCountAttribute_descriptor_,
      CMsgIncrementKillCountAttribute::default_instance_,
      CMsgIncrementKillCountAttribute_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgIncrementKillCountAttribute, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgIncrementKillCountAttribute, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgIncrementKillCountAttribute));
  ECsgoGCMsg_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_is_5fmessage_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgIncrementKillCountAttribute_descriptor_, &CMsgIncrementKillCountAttribute::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_is_5fmessage_2eproto() {
  delete CMsgIncrementKillCountAttribute::default_instance_;
  delete CMsgIncrementKillCountAttribute_reflection_;
}

void protobuf_AddDesc_is_5fmessage_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020is_message.proto\"\214\001\n\037CMsgIncrementKill"
    "CountAttribute\022\031\n\021killer_account_id\030\001 \001("
    "\007\022\031\n\021victim_account_id\030\002 \001(\007\022\017\n\007item_id\030"
    "\003 \001(\004\022\022\n\nevent_type\030\004 \001(\r\022\016\n\006amount\030\005 \001("
    "\r*7\n\nECsgoGCMsg\022)\n$k_EMsgGC_IncrementKil"
    "lCountAttribute\020\262\010B\005H\001\200\001\000", 225);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "is_message.proto", &protobuf_RegisterTypes);
  CMsgIncrementKillCountAttribute::default_instance_ = new CMsgIncrementKillCountAttribute();
  CMsgIncrementKillCountAttribute::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_is_5fmessage_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_is_5fmessage_2eproto {
  StaticDescriptorInitializer_is_5fmessage_2eproto() {
    protobuf_AddDesc_is_5fmessage_2eproto();
  }
} static_descriptor_initializer_is_5fmessage_2eproto_;
const ::google::protobuf::EnumDescriptor* ECsgoGCMsg_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ECsgoGCMsg_descriptor_;
}
bool ECsgoGCMsg_IsValid(int value) {
  switch(value) {
    case 1074:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgIncrementKillCountAttribute::kKillerAccountIdFieldNumber;
const int CMsgIncrementKillCountAttribute::kVictimAccountIdFieldNumber;
const int CMsgIncrementKillCountAttribute::kItemIdFieldNumber;
const int CMsgIncrementKillCountAttribute::kEventTypeFieldNumber;
const int CMsgIncrementKillCountAttribute::kAmountFieldNumber;
#endif  // !_MSC_VER

CMsgIncrementKillCountAttribute::CMsgIncrementKillCountAttribute()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMsgIncrementKillCountAttribute::InitAsDefaultInstance() {
}

CMsgIncrementKillCountAttribute::CMsgIncrementKillCountAttribute(const CMsgIncrementKillCountAttribute& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMsgIncrementKillCountAttribute::SharedCtor() {
  _cached_size_ = 0;
  killer_account_id_ = 0u;
  victim_account_id_ = 0u;
  item_id_ = GOOGLE_ULONGLONG(0);
  event_type_ = 0u;
  amount_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgIncrementKillCountAttribute::~CMsgIncrementKillCountAttribute() {
  SharedDtor();
}

void CMsgIncrementKillCountAttribute::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgIncrementKillCountAttribute::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgIncrementKillCountAttribute::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgIncrementKillCountAttribute_descriptor_;
}

const CMsgIncrementKillCountAttribute& CMsgIncrementKillCountAttribute::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_is_5fmessage_2eproto();
  return *default_instance_;
}

CMsgIncrementKillCountAttribute* CMsgIncrementKillCountAttribute::default_instance_ = NULL;

CMsgIncrementKillCountAttribute* CMsgIncrementKillCountAttribute::New() const {
  return new CMsgIncrementKillCountAttribute;
}

void CMsgIncrementKillCountAttribute::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    killer_account_id_ = 0u;
    victim_account_id_ = 0u;
    item_id_ = GOOGLE_ULONGLONG(0);
    event_type_ = 0u;
    amount_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgIncrementKillCountAttribute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed32 killer_account_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &killer_account_id_)));
          set_has_killer_account_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(21)) goto parse_victim_account_id;
        break;
      }

      // optional fixed32 victim_account_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_victim_account_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &victim_account_id_)));
          set_has_victim_account_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_item_id;
        break;
      }

      // optional uint64 item_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_event_type;
        break;
      }

      // optional uint32 event_type = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_event_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &event_type_)));
          set_has_event_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_amount;
        break;
      }

      // optional uint32 amount = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &amount_)));
          set_has_amount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMsgIncrementKillCountAttribute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional fixed32 killer_account_id = 1;
  if (has_killer_account_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(1, this->killer_account_id(), output);
  }

  // optional fixed32 victim_account_id = 2;
  if (has_victim_account_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(2, this->victim_account_id(), output);
  }

  // optional uint64 item_id = 3;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->item_id(), output);
  }

  // optional uint32 event_type = 4;
  if (has_event_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->event_type(), output);
  }

  // optional uint32 amount = 5;
  if (has_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->amount(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMsgIncrementKillCountAttribute::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional fixed32 killer_account_id = 1;
  if (has_killer_account_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(1, this->killer_account_id(), target);
  }

  // optional fixed32 victim_account_id = 2;
  if (has_victim_account_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(2, this->victim_account_id(), target);
  }

  // optional uint64 item_id = 3;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->item_id(), target);
  }

  // optional uint32 event_type = 4;
  if (has_event_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->event_type(), target);
  }

  // optional uint32 amount = 5;
  if (has_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->amount(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMsgIncrementKillCountAttribute::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional fixed32 killer_account_id = 1;
    if (has_killer_account_id()) {
      total_size += 1 + 4;
    }

    // optional fixed32 victim_account_id = 2;
    if (has_victim_account_id()) {
      total_size += 1 + 4;
    }

    // optional uint64 item_id = 3;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

    // optional uint32 event_type = 4;
    if (has_event_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->event_type());
    }

    // optional uint32 amount = 5;
    if (has_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->amount());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgIncrementKillCountAttribute::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgIncrementKillCountAttribute* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgIncrementKillCountAttribute*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgIncrementKillCountAttribute::MergeFrom(const CMsgIncrementKillCountAttribute& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_killer_account_id()) {
      set_killer_account_id(from.killer_account_id());
    }
    if (from.has_victim_account_id()) {
      set_victim_account_id(from.victim_account_id());
    }
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_event_type()) {
      set_event_type(from.event_type());
    }
    if (from.has_amount()) {
      set_amount(from.amount());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgIncrementKillCountAttribute::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgIncrementKillCountAttribute::CopyFrom(const CMsgIncrementKillCountAttribute& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgIncrementKillCountAttribute::IsInitialized() const {

  return true;
}

void CMsgIncrementKillCountAttribute::Swap(CMsgIncrementKillCountAttribute* other) {
  if (other != this) {
    std::swap(killer_account_id_, other->killer_account_id_);
    std::swap(victim_account_id_, other->victim_account_id_);
    std::swap(item_id_, other->item_id_);
    std::swap(event_type_, other->event_type_);
    std::swap(amount_, other->amount_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgIncrementKillCountAttribute::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgIncrementKillCountAttribute_descriptor_;
  metadata.reflection = CMsgIncrementKillCountAttribute_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
